# Configuration for cargo-deny
[graph]
targets = [
    { triple = "x86_64-unknown-linux-gnu" },
    { triple = "x86_64-pc-windows-msvc" },
    { triple = "x86_64-apple-darwin" },
    { triple = "aarch64-apple-darwin" },
]

[licenses]
# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
]

# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-1.0",
    "AGPL-3.0",
    "EUPL-1.2",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
]

# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"

# Confidence threshold for detecting a license from a license text
confidence-threshold = 0.8

[licenses.private]
# If true, ignores workspace crates that aren't published, or are only
# published to private registries
ignore = false

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"

# Lint level for when a crate version requirement is `*`
wildcards = "allow"

# The confidence threshold for detecting a license from a license text.
# The possible values are any number between 0.0 and 1.0
confidence-threshold = 0.8

# List of crates that are allowed
allow = []

# List of crates to deny
deny = [
    # Deny old versions of crates with known security vulnerabilities
    { name = "openssl", version = "<1.1" },
    { name = "chrono", version = "<0.4.20" },
    # Deny crates that may conflict with post-quantum crypto
    { name = "ring", version = "*" },  # Use only NIST-approved algorithms
]

# Certain crates/versions that will be skipped when doing duplicate detection
skip = []

# Similarly to `skip` allows you to skip certain crates from being checked for
# multiple versions. Unlike `skip`, this applies to the entire graph
skip-tree = []

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"

# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

# List of allowed git repositories
allow-git = []

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"

# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

# The lint level for security vulnerabilities
vulnerability = "deny"

# The lint level for unmaintained crates
unmaintained = "warn"

# The lint level for crates with security notices. Note that as of
# 2019-12-17 there are no security notice advisories in
# https://github.com/rustsec/advisory-db
notice = "warn"

# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
    # Ignore specific advisories if needed
    # "RUSTSEC-2020-0001",
]